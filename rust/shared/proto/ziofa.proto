// SPDX-FileCopyrightText: 2024 Franz Schlicht <franz.schlicht@gmail.com>
// SPDX-FileCopyrightText: 2024 Robin Seidl <68117355+Mr-Kanister@users.noreply.github.com>
//
// SPDX-License-Identifier: MIT

syntax = "proto3";

import "google/protobuf/empty.proto";
import "config.proto";
package ziofa;

service Ziofa {
    rpc CheckServer(google.protobuf.Empty) returns (CheckServerResponse) {}
    rpc ListProcesses(google.protobuf.Empty) returns (ProcessList) {}

    rpc GetConfiguration(google.protobuf.Empty) returns (config.Configuration){}
    rpc SetConfiguration(config.Configuration) returns (SetConfigurationResponse){}

    rpc InitStream(google.protobuf.Empty) returns (stream Event) {}      // all Responses genereated by the ebpf-programms are send via this stream

}

message CheckServerResponse {
    // TODO
}

message ProcessList {
    repeated Process processes = 1;
}

message Process {
    int32 pid = 1;
    int32 ppid = 2;
    oneof cmd {
        CmdlineData cmdline = 3;
        string comm = 4;
    }
    string state = 5;

}

message CmdlineData {
    repeated string args = 1;
}

message SetConfigurationResponse{
    uint32 response_type = 1;
}

message Event {
    oneof event_data {
        VfsWriteEvent vfs_write = 1;
    }
}

message VfsWriteEvent {
    uint32 pid = 1;
    uint32 tid = 2;
    uint64 begin_time_stamp = 3;
    uint64 fp = 4;
    uint64 bytes_written = 5;
}